/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/DeployService/pkg/apis/deploy/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DeployServiceLister helps list DeployServices.
// All objects returned here must be treated as read-only.
type DeployServiceLister interface {
	// List lists all DeployServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DeployService, err error)
	// DeployServices returns an object that can list and get DeployServices.
	DeployServices(namespace string) DeployServiceNamespaceLister
	DeployServiceListerExpansion
}

// deployServiceLister implements the DeployServiceLister interface.
type deployServiceLister struct {
	indexer cache.Indexer
}

// NewDeployServiceLister returns a new DeployServiceLister.
func NewDeployServiceLister(indexer cache.Indexer) DeployServiceLister {
	return &deployServiceLister{indexer: indexer}
}

// List lists all DeployServices in the indexer.
func (s *deployServiceLister) List(selector labels.Selector) (ret []*v1.DeployService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DeployService))
	})
	return ret, err
}

// DeployServices returns an object that can list and get DeployServices.
func (s *deployServiceLister) DeployServices(namespace string) DeployServiceNamespaceLister {
	return deployServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DeployServiceNamespaceLister helps list and get DeployServices.
// All objects returned here must be treated as read-only.
type DeployServiceNamespaceLister interface {
	// List lists all DeployServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.DeployService, err error)
	// Get retrieves the DeployService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.DeployService, error)
	DeployServiceNamespaceListerExpansion
}

// deployServiceNamespaceLister implements the DeployServiceNamespaceLister
// interface.
type deployServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DeployServices in the indexer for a given namespace.
func (s deployServiceNamespaceLister) List(selector labels.Selector) (ret []*v1.DeployService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DeployService))
	})
	return ret, err
}

// Get retrieves the DeployService from the indexer for a given namespace and name.
func (s deployServiceNamespaceLister) Get(name string) (*v1.DeployService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("deployservice"), name)
	}
	return obj.(*v1.DeployService), nil
}
